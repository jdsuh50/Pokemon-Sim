import timeimport numpy as npimport sys# Delay printing# Create a classclass Pokemon:    def __init__(self, name, types, moves, EVs, health='===================='):        # save variables as attributes        self.name = name        self.types = types        self.moves = moves        self.attack = EVs['ATTACK']        self.defense = EVs['DEFENSE']        self.health = health        self.bars = 20 # Amount of health bars            def fight(self, pokemon2):        print('POKEMON BATTLE')        print(self.name)        print('TYPE/', self.types)        print('MOVES/', self.moves)        print('ATTACK/', self.attack)        print('DEFENSE/', self.defense)        #pokemon2        print(pokemon2.name)        print('TYPE/', pokemon2.types)        print('MOVES', pokemon2.moves)        print('ATTACK/', pokemon2.attack)        print('DEFENSE/', pokemon2.defense)                        time.sleep(2)                                version = ['Fire', 'Water', 'Grass']        for i, k in enumerate(version):            if self.types == k:                if pokemon2.types == k:                    string_1_attack = '\nIts not very effective...'                    string_2_attack = string_1_attack                                    if pokemon2.types == version[i-2]:                    pokemon2.attack *= 2                    pokemon2.defense *= 2                    self.attack /= 2                    self.defense /= 2                    string_1_attack = '\nIts not very effective...'                    string_2_attack = '\nIts super effective!'                                if pokemon2.types == version[i-1]:                    pokemon2.attack /= 2                    pokemon2.defense /= 2                    self.attack *= 2                    self.defense *= 2                    string_1_attack = '\nIts super effective!'                    string_2_attack = '\nIts not very effective...'                                                while (self.bars > 0) and (pokemon2.bars > 0):            print(self.name, 'HLTH', self.health)            print(pokemon2.name, 'HLTH', pokemon2.health)                        print('GO', self.name, '!')            for i, x in enumerate(self.moves):                print((i + 1), x)            index = int(input('Pick a move:'))            print(self.name, 'used', {self.moves[index-1]}, '!')            time.sleep(1)            print(string_1_attack)                                    pokemon2.bars -= self.attack            pokemon2.health = ""                        for j in range(int(pokemon2.bars+.1*pokemon2.defense)):                pokemon2.health += "="                                    time.sleep(1)            print(self.name, 'HLTH', self.health)            print(pokemon2.name, 'HLTH', pokemon2.health)            time.sleep(2)                                                if pokemon2.bars <= 0:                print('...', pokemon2.name, 'fainted!')                break                        # Pokemon 2 Attack                                    print('GO', pokemon2.name, '!')            for i, x in enumerate(pokemon2.moves):                print((i + 1), x)            index = int(input('Pick a move:'))            print(pokemon2.name, 'used', {pokemon2.moves[index-1]}, '!')            time.sleep(1)            print(string_2_attack)                                    self.bars -= pokemon2.attack            self.health = ""                        for j in range(int(self.bars+.1*self.defense)):                self.health += "="                                    time.sleep(1)            print(pokemon2.name, 'HLTH', pokemon2.health)            print(self.name, 'HLTH', self.health)            time.sleep(2)                                    if self.bars <= 0:                print('...', self.name, 'fainted!')                break                    money = np.random.choice(5000)        print('Opponent paid you $', money)            if __name__ == '__main__':    Charizard = Pokemon('Charizard', 'Fire', ['Flamethrower', 'Ember', 'Blast Burn', 'Fire Punch'], {'ATTACK':12, 'DEFENSE':8})    Blastoise = Pokemon('Blastoise', 'Water', ['Surf', 'Bubblebeam', 'Hydro Pump', 'Waterfall'], {'ATTACK':10, 'DEFENSE':10})    Venusaur = Pokemon('Venusaur', 'Grass', ['Razor Leaf', 'Vine Whip', 'Frenzy Plant', 'Solar Beam'], {'ATTACK':8, 'DEFENSE':12})                                                                                                                                                            